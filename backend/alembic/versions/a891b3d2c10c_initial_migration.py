"""Initial migration

Revision ID: a891b3d2c10c
Revises: 
Create Date: 2024-07-14 20:17:48.289143

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = "a891b3d2c10c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("bio", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "gender",
            sa.Enum("MALE", "FEMALE", "OTHER", "NOT_SPECIFIED", name="gender"),
            nullable=True,
        ),
        sa.Column(
            "profile_photo_key", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_table(
        "dailygoal",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("block_size", sa.Integer(), nullable=False),
        sa.Column("is_selected", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id", "quantity", "block_size", name="uq_user_quantity_block_size"
        ),
    )
    op.create_index(
        op.f("ix_dailygoal_user_id"), "dailygoal", ["user_id"], unique=False
    )
    op.create_table(
        "studycategory",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_selected", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("title", "user_id"),
    )
    op.create_index(
        op.f("ix_studycategory_title"), "studycategory", ["title"], unique=False
    )
    op.create_table(
        "studyblock",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("rating", sa.Float(), nullable=True),
        sa.Column("is_countdown", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("daily_goal_id", sa.Integer(), nullable=False),
        sa.Column("study_category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["daily_goal_id"],
            ["dailygoal.id"],
        ),
        sa.ForeignKeyConstraint(
            ["study_category_id"],
            ["studycategory.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_studyblock_daily_goal_id"),
        "studyblock",
        ["daily_goal_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_studyblock_study_category_id"),
        "studyblock",
        ["study_category_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_studyblock_user_id"), "studyblock", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_studyblock_user_id"), table_name="studyblock")
    op.drop_index(op.f("ix_studyblock_study_category_id"), table_name="studyblock")
    op.drop_index(op.f("ix_studyblock_daily_goal_id"), table_name="studyblock")
    op.drop_table("studyblock")
    op.drop_index(op.f("ix_studycategory_title"), table_name="studycategory")
    op.drop_table("studycategory")
    op.drop_index(op.f("ix_dailygoal_user_id"), table_name="dailygoal")
    op.drop_table("dailygoal")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
